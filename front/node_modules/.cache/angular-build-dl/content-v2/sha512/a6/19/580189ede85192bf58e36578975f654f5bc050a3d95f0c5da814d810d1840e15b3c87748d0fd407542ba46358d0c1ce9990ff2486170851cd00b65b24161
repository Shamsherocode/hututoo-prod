{"version":3,"sources":["webpack:///src/app/pages/register/register.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/pages/lock/lock.component.html","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pages/register/register.component.ts","webpack:///src/app/pages/pages.routing.ts","webpack:///src/app/pages/lock/lock.component.ts","webpack:///src/app/services/ng-recaptcha3.service.ts","webpack:///src/app/pages/login/login.component.html"],"names":["LoginComponent","element","http","recaptcha3","auth","router","formBuilder","api","cookies","message","communicationChannel","deviceID","ques","cred","forgotPassBtnText","forgetUserBtnText","formName","passwordType","passwordType1","passwordType2","formHeading","iconType","iconType1","iconType2","submitted","forgotPassStep","forgotUserstep","username","siteKey","test","Date","nativeElement","sidebarVisible","$page","$","image_src","data","undefined","image_container","append","loading","login","password","forgetPass","answer","secretcode","newpassword","selectedOption","email","newpassword2","init","checkFullPageBackgroundImage","body","document","getElementsByTagName","classList","add","navbar","toggleButton","getElementsByClassName","setTimeout","removeClass","remove","sidebar","model","isValid","bodydata","headers","post","subscribe","result","setToken","jwt","window","location","href","error","get","destroy","sendOTP","option","getToken","then","token","channel","captcha","httpRequest","isOK","getDeviceID","params","question","Number","resetCode","newPassword","authData","accessToken","setRefreshToken","refreshToken","selector","template","ApiService","authService","method","url","incodeURL","incodedData","apiheader","toUrlEncoded","obj","Object","keys","map","k","encodeURIComponent","join","providedIn","PagesModule","imports","forChild","declarations","RegisterComponent","PagesRoutes","path","children","component","LockComponent","NgRecaptcha3Service","baseUrl","isLoaded","scriptId","action","execute","e","Promise","resolve","reject","script","createElement","innerHTML","src","id","async","defer","onload","onerror","head","appendChild","getElementById","badge"],"mappings":"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","file":"pages-pages-module-es5.js","sourcesContent":["export default \"<nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-wrapper\\\">\\n      <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n          <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n        </button>\\n      </div>\\n      <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">Paper Dashboard PRO Angular</a>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-layout-11\\\"></i> Dashboard\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/register']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-book-bookmark\\\"></i> Register\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/login']\\\"  class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-tap-01\\\"></i> Login\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/user']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-satisfied\\\"></i> User\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item  active \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/lock']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-key-25\\\"></i> Lock\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"wrapper wrapper-full-page \\\">\\n  <div class=\\\"full-page register-page section-image\\\" filter-color=\\\"black\\\" data-image=\\\"./assets/img/bg/jan-sendereks.jpg\\\">\\n    <div class=\\\"content\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-5 col-md-5 ml-auto\\\">\\n            <div class=\\\"info-area info-horizontal mt-5\\\">\\n              <div class=\\\"icon icon-primary\\\">\\n                <i class=\\\"nc-icon nc-tv-2\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Marketing</h5>\\n                <p class=\\\"description\\\">\\n                  We've created the marketing campaign of the website. It was a very interesting collaboration.\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"info-area info-horizontal\\\">\\n              <div class=\\\"icon icon-primary\\\">\\n                <i class=\\\"nc-icon nc-html5\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Fully Coded in HTML5</h5>\\n                <p class=\\\"description\\\">\\n                  We've developed the website with HTML5 and CSS3. The client has access to the code using GitHub.\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"info-area info-horizontal\\\">\\n              <div class=\\\"icon icon-info\\\">\\n                <i class=\\\"nc-icon nc-atom\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Built Audience</h5>\\n                <p class=\\\"description\\\">\\n                  There is also a Fully Customizable CMS Admin Dashboard for this product.\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 mr-auto\\\">\\n            <div class=\\\"card card-signup text-center\\\">\\n              <div class=\\\"card-header \\\">\\n                <h4 class=\\\"card-title\\\">Register</h4>\\n                <div class=\\\"social\\\">\\n                  <button class=\\\"btn btn-icon btn-round btn-twitter\\\">\\n                    <i class=\\\"fa fa-twitter\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-icon btn-round btn-dribbble\\\">\\n                    <i class=\\\"fa fa-dribbble\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-icon btn-round btn-facebook\\\">\\n                    <i class=\\\"fa fa-facebook-f\\\"></i>\\n                  </button>\\n                  <p class=\\\"card-description\\\"> or be classical </p>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body \\\">\\n                <form class=\\\"form\\\" method=\\\"\\\" action=\\\"\\\">\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\">\\n                  </div>\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus1===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-circle-10\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Last Name...\\\" class=\\\"form-control\\\" (focus)=\\\"focus1=true\\\" (blur)=\\\"focus1=false\\\">\\n                  </div>\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus2===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-email-85\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email...\\\" (focus)=\\\"focus2=true\\\" (blur)=\\\"focus2=false\\\">\\n                  </div>\\n                  <div class=\\\"form-check text-left\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" checked>\\n                      <span class=\\\"form-check-sign\\\"></span>\\n                      I agree to the\\n                      <a href=\\\"#something\\\">terms and conditions</a>.\\n                    </label>\\n                  </div>\\n                </form>\\n              </div>\\n              <div class=\\\"card-footer \\\">\\n                <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-info btn-round\\\">Get Started</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer footer-black  footer-white \\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <nav class=\\\"footer-nav\\\">\\n            <ul>\\n              <li>\\n                <a href=\\\"#\\\" target=\\\"_blank\\\">Creative Tim</a>\\n              </li>\\n              <li>\\n                <a href=\\\"http://blog.creative-tim.com/\\\" target=\\\"_blank\\\">Blog</a>\\n              </li>\\n              <li>\\n                <a href=\\\"#/license\\\" target=\\\"_blank\\\">Licenses</a>\\n              </li>\\n            </ul>\\n          </nav>\\n          <div class=\\\"credits ml-auto\\\">\\n            <span class=\\\"copyright\\\">\\n              &copy; {{test | date: 'yyyy'}}, made with <i class=\\\"fa fa-heart heart\\\"></i> by Creative Tim\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </footer>\\n  </div>\\n</div>\\n\";","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms'\nimport { NgRecaptcha3Service } from '../../services/ng-recaptcha3.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ApiService } from '../../services/api.service';\nimport { headers } from 'environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\n\n\ndeclare var $:any;\ndeclare interface User {\n    username?: string; //  must be valid email format\n    password?: string; // required, value must be equal to confirm password.\n    \n}\n\ndeclare interface ForgetPassword {\n    username?: string;\n    answer?: string; // required, value must be equal to confirm password.\n    secretcode?: string;\n    newpassword?: string;\n    selectedOption?: string;\n    email?: string;\n    newpassword2?: string;\n    \n}\n\n@Component({\n    moduleId:module.id,\n    selector: 'login-cmp',\n    templateUrl: './login.component.html',\n    // styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n    message:                string  =   '';\n    communicationChannel:   string  =   '';\n    deviceID:               string  =   '';\n    ques:                   string  =   '';\n    cred:                   string  =   '';\n    forgotPassBtnText:      string  =   'Next';\n    forgetUserBtnText:      string  =   'Next';\n    formName:               string  =   'login';\n    passwordType:           string  =   'password';\n    passwordType1:          string  =   'password';\n    passwordType2:          string  =   'password';\n    formHeading:            string  =   'WELCOME BACK';\n    iconType:               string  =   'fa fa-eye-slash';\n    iconType1:              string  =   'fa fa-eye-slash';\n    iconType2:              string  =   'fa fa-eye-slash';\n    submitted:              boolean =   false;\n    forgotPassStep:         any     =   1;\n    forgotUserstep:         any     =   1;\n    username:               any     =   \"\";\n    option:                 Number;\n\n\n    private siteKey     = '6LdhHnodAAAAANT35rUOPEZ0TnF31D6qOqSfby81';\n    public  loading     : boolean;\n    public  login       : User;\n    public  forgetPass  : ForgetPassword;\n  \n\n        focus;\n        focus1;\n        focus2;\n        test : Date = new Date();\n        private toggleButton;\n        private sidebarVisible: boolean;\n        private nativeElement:  Node;\n\n    constructor(private element : ElementRef,\n        private http: HttpClient, \n        private recaptcha3: NgRecaptcha3Service,\n        private auth: AuthService,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private api:ApiService,\n        private cookies: CookieService,) \n        {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n        }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n   \n    ngOnInit(){\n    this.forgotPassStep     = 1;\n    this.forgotUserstep     = 1;\n    this.forgotPassBtnText  = 'Next';\n    this.forgetUserBtnText  = 'Next'\n    this.loading            = false;\n    this.login = {\n            username: '',\n            password: '',\n        }\n    this.forgetPass = {\n            answer: '',\n            secretcode: '',\n            newpassword: '',\n            selectedOption: '',\n            email: '',\n            newpassword2: '',\n        }\n\n        this.recaptcha3.init(this.siteKey);\n        this.checkFullPageBackgroundImage();\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('login-page');\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('login-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n\n    TogglePasswordType(){\n        if(this.passwordType=='password' && this.iconType=='fa fa-eye-slash'){\n            this.passwordType='text'\n            this.iconType='fa fa-eye'\n        }else{\n            this.passwordType='password'\n            this.iconType='fa fa-eye-slash'\n            \n        }\n    }\n\n    TogglePasswordType1(){\n        if(this.passwordType1=='password' && this.iconType1=='fa fa-eye-slash'){\n            this.passwordType1='text'\n            this.iconType1='fa fa-eye'\n        }else{\n            this.passwordType1='password'\n            this.iconType1='fa fa-eye-slash'\n        }\n    }\n\n    TogglePasswordType2(){\n        if(this.passwordType2=='password' && this.iconType2=='fa fa-eye-slash'){\n            this.passwordType2='text'\n            this.iconType2='fa fa-eye'\n        }else{\n            this.passwordType2='password'\n            this.iconType2='fa fa-eye-slash'\n        }\n    }\n\n    // Login function and redirect to the Dashboard\n    \n    loginSubmit(model: User, isValid: boolean) {\n        if(isValid){\n            this.loading = true;\n                let bodydata ={\n                email :model.username,\n                password :model.password,\n                    };\n                this.submitted = true;\n                let headers={\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json'\n                    })\n                }\n                // this.api.httpRequest('post', '/api/login', bodydata).subscribe((result: any) => {\n                    this.http.post('http://www.api.psd2htmlx.com/api/login', bodydata, headers).subscribe((result:any) => {\n                    this.submitted = false;\n                        this.auth.setToken(result.jwt)\n                        // this.auth.setJwt(result.jwt)\n                        this.message = \"\"\n                        this.loading = false;\n                        window.location.href = '#/dashboard'\n                       \n                        // this.getUserData()\n                    }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n        \n                \n                    }\n                    \n                }\n\n\n    getUserData(){\n        let headers={\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            })\n        }\n        if (this.auth.jwt){\n            this.http.get('http://www.api.psd2htmlx.com/api/user', headers).subscribe((data:any) => {\n            })\n        }\n        else{\n            window.location.href = 'login'\n        }\n    }\n\n\n\n    destroyRecaptcha() {\n        this.recaptcha3.destroy();\n      }\n\n\n     // Redirect on the Forget Password Page\n    forgetPassword(){\n        this.submitted      =   false;\n        this.loading        =   false;\n        this.message        =   \"\"\n        this.formName       =   'forgotPassForm';\n        this.forgotPassStep =   1;\n        this.formHeading    =   'FORGOT PASSWORD';\n        \n        \n     }\n\n    // Redirect on the Login Page\n    loginRedirect(){\n        this.message        =   \"\"\n        this.formName       =   'login';\n        this.loading        =   false;\n        this.formHeading    =   'WELCOME BACK';\n        \n    }\n\n    // Redirect on the Forget Username Form\n    usernameRedirect(){\n        this.forgotUserstep =   1;\n        this.message        =   \"\"\n        this.formName       =   'forgetUsername';\n        this.loading        =   false;\n        this.formHeading    =   'FORGOT USERNAME';\n    }\n\n    // Resend OTP\n    resendOTP(){\n        this.sendOTP(this.option)\n\n    }\n\n    // Send OTP\n    sendOTP(option){\n        this.recaptcha3.getToken().then(token => {\n            let bodydata = {\n                channel: option,\n                deviceID: this.deviceID,\n                captcha: token\n                };  \n                    this.api.httpRequest('post', 'users/forgotPassword/step3', bodydata).subscribe((result: any) => {\n                        if(result.isOK){\n                            this.message = \"\"\n                            this.forgotPassStep = 4;\n                            this.forgotPassBtnText ='Submit';\n                            this.loading = false;\n                            this.submitted = false;\n                        } else {\n                            this.message = result.message;\n                            this.loading = false;\n                        }\n                    }, error => {\n                this.loading = false;\n                this.message = error.message\n                   \n                });\n\n        }, error => {\n            this.loading = false;\n            this.message = error.message\n               \n            });\n\n    }\n\n    // Forget Password function\n    submitForgotPassword(model: ForgetPassword, isValid: boolean){\n        this.submitted = true;\n        if(isValid){\n        this.loading = true;\n        \n        this.recaptcha3.getToken().then(token => {\n            this.deviceID = this.auth.getDeviceID()\n            if(this.forgotPassStep ==1){  \n                let bodydata ={\n                    username :model.username,\n                    captcha: token,\n                    deviceID : this.deviceID\n                    };\n                        this.api.httpRequest('post', 'users/forgotPassword/step1', bodydata).subscribe((result: any) => {\n                            if(result.isOK){\n                                this.ques = result.params\n                                this.message = \"\"\n                                this.forgotPassStep = 2;\n                                this.loading = false;\n                                this.submitted = false;\n                            } else{\n                                this.message = result.message\n                                this.loading = false;\n                                \n                            }\n                            }, error => {\n                                this.message = error.message;\n                                this.loading = false;\n                            });\n                \n                }\n                \n            if(this.forgotPassStep ==2){ \n                let bodydata = {\n                    question: this.ques[0]+'',\n                    captcha: token,\n                    deviceID : this.deviceID,\n                    answer: model.answer,\n                    };\n                        this.api.httpRequest('post', 'users/forgotPassword/step2', bodydata).subscribe((result: any) => {\n                            if(result.isOK){\n                                this.cred = result.params\n                                this.message = \"\"\n                                this.forgotPassStep = 3;\n                                this.loading = false;\n                                this.submitted = false;\n                            } else {\n                                this.message = result.message;\n                                this.loading = false;\n                            }\n                        }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n\n                }\n\n\n            if(this.forgotPassStep ==3){ \n                this.option =  Number(model.selectedOption)\n                this.sendOTP(this.option);\n\n                }\n        \n        \n            if(this.forgotPassStep ==4){\n                if(model.newpassword != model.newpassword2){\n                    this.message = \"Password does not match\";\n                    this.loading = false;\n                } else {\n                    let bodydata = {\n                        deviceID: this.deviceID,\n                        resetCode: model.secretcode,\n                        newPassword: model.newpassword,\n                        captcha: token\n                        };\n                            this.api.httpRequest('post', 'users/forgotPassword/step4', bodydata).subscribe((result: any) => {\n                                if(result.isOK){\n                                    this.message = \"\"\n                                    this.auth.setToken(result.authData.accessToken)\n                                    this.auth.setRefreshToken(result.authData.refreshToken)\n                                    window.location.href = 'dashboard'\n                                } else {\n                                    this.message = result.message;\n                                    this.loading = false;\n                                }\n                            }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n                        }\n            \n                    }\n                 \n                    }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n                    }\n    \n                }\n    \n   \n    \n    \n    // Forget Username\n\n    forgetUsername(model: ForgetPassword, isValid: boolean){\n        if(isValid){\n            this.loading = true;\n            this.recaptcha3.getToken().then(token => {\n                if(this.forgotUserstep ==1){\n                    let bodydata = {\n                        deviceID: this.auth.getDeviceID(),\n                        captcha: token,\n                        }; \n                            this.api.httpRequest('post', '/users/'+model.email+'/emails/usernameReminder', bodydata).subscribe((result: any) => {\n                                if(result.isOK){\n                                    this.message = \"\"\n                                    this.loading = false;\n                                    this.forgotUserstep = 2;\n                                    this.forgetUserBtnText ='Done'\n\n                                } else{\n                                    this.loading = false;\n                                    this.message = result.message\n                                }\n                            }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n                    }\n\n\n                if(this.forgotUserstep == 2){\n \t\t\t\t\t\tthis.formName = 'login';\n                        this.loading = false;\n                }\n\n                }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n\n                    }\n            }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { baseUrl, headers } from 'environments/environment';\n\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  incodeURL: any;\n  apiheader: any;\n  \n\n constructor(private http: HttpClient, private authService: AuthService) { }\n\n\n public httpRequest(method: string,url: string, data) {\n \n  if(data){\n  this.incodeURL = this.incodedData(data)\n  }\n  \n  // if(withAuth){\n  //   if(this.checkAccessToken()){\n  // \t this.apiheader = this.HeaderWithToken();\n  // \t}else{\n  // \t window.location.href = 'login'\n  // \t}\n  // }else{\n  // \tthis.apiheader = this.Header();\n  // }\n  \n  if(method =='post'){\n  \treturn this.http.post(`${baseUrl}${url}`, this.incodeURL, this.apiheader)\n  }else if(method =='put'){\n  \n  }else{\n    \n    return this.http.get(`${baseUrl}${url}`, this.apiheader);\n  }\n    \n    \n  }\n  \n  // public checkAccessToken(){\n  // var AccessToken = this.authService.getAccessToken();\n  // if(AccessToken){\n  // var tokenData = jwt_decode(AccessToken);\n  // var _accessTokenCurrentTime = new Date();\n  // var _accessTokenExpTime = new Date(tokenData['exp'] * 1000);\n  \n  // var seconds = Math.floor((_accessTokenExpTime.getTime() - _accessTokenCurrentTime.getTime())/ 1000) ;\n  // console.log(seconds)\n  // if(seconds < 5){\n  // \treturn this.refreshAccessToken();\n  // }else{\n  // \treturn true\n  // }\n  \n  // }\n \n  // }\n  \n  \n  // public refreshAccessToken(){\n  //   const url = 'jwtRefreshSessions';\n  //   var data = {'refreshToken': this.authService.getRefreshToken(), 'deviceID': this.authService.getDeviceID()};\n  //   const incodeURL = this.incodedData(data)\n  //   return this.http.post<any>(`${baseUrl}${url}`, incodeURL, { headers: headers }).subscribe((result: any) => {\n  //     if(result.isOK){\n  //    \t this.authService.setToken(result.authData.accessToken)\n  //    \t this.authService.setRefreshToken(result.authData.refreshToken)\n  //    \t return true;\n  //     }else{\n  //     return false;\n  //     }\n      \n  //   })\n  // }\n  \n  \n  \n  // public HeaderWithToken() {\n  //   let header = new HttpHeaders();\n  //   header = header.append('Authorization', 'Bearer ' + this.authService.getAccessToken());\n  //   return { headers: header };\n  // }\n  \n  public Header() {\n    return { headers: headers };\n  }\n  \n  public incodedData(data){\n    const toUrlEncoded = obj => Object.keys(obj).map(\n      k => encodeURIComponent(k) + '=' + encodeURIComponent(obj[k])).join('&');\n      return(toUrlEncoded(data))\n  }\n  \n}\n","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-wrapper\\\">\\n      <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n          <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n        </button>\\n      </div>\\n      <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">Paper Dashboard PRO Angular</a>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-layout-11\\\"></i> Dashboard\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/register']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-book-bookmark\\\"></i> Register\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/login']\\\"  class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-tap-01\\\"></i> Login\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/user']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-satisfied\\\"></i> User\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item  active \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/lock']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-key-25\\\"></i> Lock\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"wrapper wrapper-full-page \\\">\\n  <div class=\\\"full-page lock-page section-image\\\" filter-color=\\\"black\\\" data-image=\\\"./assets/img/bg/bruno-abatti.jpg\\\">\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | green | orange | red | purple\\\" -->\\n    <div class=\\\"content\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"col-lg-4 col-md-6 ml-auto mr-auto\\\">\\n          <div class=\\\"card card-lock text-center\\\">\\n            <div class=\\\"card-header \\\">\\n              <img src=\\\"./assets/img/faces/joe-gardner-2.jpg\\\" alt=\\\"...\\\">\\n            </div>\\n            <div class=\\\"card-body \\\">\\n              <h4 class=\\\"card-title\\\">Joe Gardner</h4>\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password..\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"card-footer \\\">\\n              <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-default btn-round\\\">Unlock</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer footer-black  footer-white \\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <nav class=\\\"footer-nav\\\">\\n            <ul>\\n              <li>\\n                <a href=\\\"#\\\" target=\\\"_blank\\\">Creative Tim</a>\\n              </li>\\n              <li>\\n                <a href=\\\"http://blog.creative-tim.com/\\\" target=\\\"_blank\\\">Blog</a>\\n              </li>\\n              <li>\\n                <a href=\\\"#/license\\\" target=\\\"_blank\\\">Licenses</a>\\n              </li>\\n            </ul>\\n          </nav>\\n          <div class=\\\"credits ml-auto\\\">\\n            <span class=\\\"copyright\\\">\\n            &copy; {{test | date: 'yyyy'}}, made with <i class=\\\"fa fa-heart heart\\\"></i> by Creative Tim\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </footer>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\nimport { PagesRoutes } from './pages.routing';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LockComponent } from './lock/lock.component';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(PagesRoutes),\n        FormsModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [\n        LoginComponent,\n        RegisterComponent,\n        LockComponent\n    ]\n})\n\nexport class PagesModule {}\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\n\ndeclare var $:any;\n\n@Component({\n    moduleId:module.id,\n    selector: 'register-cmp',\n    templateUrl: './register.component.html'\n})\n\nexport class RegisterComponent implements OnInit{\n  focus;\n  focus1;\n  focus2;\n    test : Date = new Date();\n    private toggleButton;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n\n    constructor(private element : ElementRef) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('register-page');\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    ngOnInit(){\n        this.checkFullPageBackgroundImage();\n\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('register-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LockComponent } from './lock/lock.component';\nimport { LoginComponent } from './login/login.component';\n\nexport const PagesRoutes: Routes = [{\n    path: '',\n    children: [ {\n        path: 'login',\n        component: LoginComponent\n    },{\n        path: 'lock',\n        component: LockComponent\n    },{\n        path: 'register',\n        component: RegisterComponent\n    }]\n}];\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\n\ndeclare var $:any;\n\n@Component({\n    moduleId:module.id,\n    selector: 'lock-cmp',\n    templateUrl: './lock.component.html'\n})\n\nexport class LockComponent implements OnInit{\n    test : Date = new Date();\n    private toggleButton;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n\n    constructor(private element : ElementRef) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    ngOnInit(){\n        this.checkFullPageBackgroundImage();\n\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('lock-page');\n\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('lock-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgRecaptcha3Service {\n  private baseUrl = 'https://www.google.com/recaptcha/api.js';\n  private siteKey = '';\n  private isLoaded: Boolean = false;\n  private scriptId;\n\n  constructor() { \n    window['ngRecaptcha3Loaded'] = () => {\n      this.isLoaded = true;\n    };\n    this.scriptId = +(new Date());\n  }\n\n  public getToken(action?: any): Promise<any> {\n    try {\n      return window['grecaptcha'].execute(this.siteKey, action);\n    } catch (e) {\n      return new Promise((resolve, reject) => {\n        reject(e);\n      });\n    }\n  }\n\n  public init(siteKey) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoaded) {\n        resolve('success');\n        return;\n      } else {\n        this.siteKey = siteKey;\n        const script = document.createElement('script');\n        script.innerHTML = '';\n        script.src = this.baseUrl + `?render=${this.siteKey}&onload=ngRecaptcha3Loaded`;\n        script.id = `recapthcha-${this.scriptId}`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          resolve('success');\n        }\n        script.onerror = () => {\n          reject('error');\n        };\n        document.head.appendChild(script);\n      }\n\n    });\n\n  }\n\n  public destroy() {\n    this.isLoaded = false;\n      const script = document.getElementById(`recapthcha-${this.scriptId}`);\n      if (script) {\n        script.remove();\n      }\n      const badge = document.getElementsByClassName('grecaptcha-badge')[0];\n      if (badge) {\n        badge.remove();\n      }\n  \n    }\n\n}\n","export default \"<style>\\n  .form-control{border-color:#DDDDDD!important;}\\n  .input-group .form-control:not(:first-child):not(:last-child), .input-group-btn:not(:first-child):not(:last-child){\\n      border-top-right-radius: 0!important;\\n       border-bottom-right-radius: 0!important; \\n  }\\n  h4.header{margin-top:0px;}\\n  small, .small {\\n      margin-bottom: 10px;\\n      float: left;\\n  }\\n  </style>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"navbar-wrapper\\\">\\n        <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n            <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n            <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n            <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n          </button>\\n        </div>\\n        <!-- <img src=\\\"./assets/img/logo(1).png\\\" alt=\\\"image\\\" style=\\\"margin: left 110px; height: 50px; opacity: 0.6;\\\"> -->\\n      </div>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      </div>\\n    </div>\\n  </nav>\\n  <div class=\\\"text-white bg-dark\\\">\\n  <div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page\\\" style=\\\"color: #1e4b63\\\">\\n      <div class=\\\"content\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-4 col-md-6 ml-auto mr-auto\\\">\\n  \\n            <div class=\\\"card card-login\\\">\\n              <div class=\\\"card-header \\\">\\n                <div class=\\\"card-header \\\">\\n                  <h4 class=\\\"header text-center\\\">{{this.formHeading}}</h4>\\n                </div>\\n              </div>\\n  \\n            <!-- login form -->\\n            <div *ngIf=\\\"formName=='login'\\\">\\n            <form #f1=\\\"ngForm\\\" novalidate  (ngSubmit)=\\\"loginSubmit(f1.value, f1.valid)\\\">\\n              \\n                <div class=\\\"card-body \\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                      </span>\\n                    </div>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"login.username\\\" required  #username=\\\"ngModel\\\" placeholder=\\\"Username\\\">\\n                   \\n                  </div>\\n                  <small [hidden]=\\\"username.valid || (username.pristine && !f1.submitted)\\\" class=\\\"text-danger\\\">\\n                                    Username is required.\\n                                  </small>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                      </span>\\n                    </div>\\n                     <input type=\\\"{{this.passwordType}}\\\" class=\\\"form-control\\\" name=\\\"password\\\"  [ngModel]=\\\"login.password\\\" required validateEqual=\\\"confirmPassword\\\" reverse=\\\"true\\\" #password=\\\"ngModel\\\" placeholder=\\\"Password\\\">\\n                     <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"{{this.iconType}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType()\\\"></i>\\n                      </span>\\n                    </div>\\n                    </div>\\n                   <small [hidden]=\\\"password.valid || (password.pristine && !f1.submitted)\\\" class=\\\"text-danger\\\">\\n                                    Password is required\\n                                  </small>\\n                    <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"forgetPassword()\\\">Forgot Password?</a>\\n                  </div>\\n                  \\n                  \\n                </div>\\n               \\n  \\n                <div class=\\\"card-footer\\\">\\n                <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                  <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                  <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                  </div>\\n                   <div *ngIf=\\\"!loading\\\">\\n                   <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">Sign in</button>\\n                   </div>\\n                </div>\\n  \\n            </form>\\n            </div>\\n            <!-- end -->\\n  \\n            <!-- forget password form -->\\n            <div *ngIf=\\\"formName=='forgotPassForm'\\\">\\n                <form #f2=\\\"ngForm\\\" novalidate  (ngSubmit)=\\\"submitForgotPassword(f2.value, f2.valid)\\\">\\n  \\n                   \\n                    <div style=\\\"text-align: right; font-size: small; padding-right: 4%; color: darkgray;\\\">\\n                      <span>Step {{this.forgotPassStep}}/4</span>\\n                  </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==1\\\">\\n                    <div class=\\\"card-body \\\">\\n                      \\n                      <div class=\\\"input-group\\\">\\n                        \\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                          </span>\\n                        </div>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"login.username\\\" required  #username=\\\"ngModel\\\" placeholder=\\\"Username\\\">\\n                       \\n                      </div>\\n                      <small [hidden]=\\\"username.valid || (username.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                          Username is required.\\n                      </small>\\n                     \\n                      \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"usernameRedirect()\\\">Forgot Username?</a>\\n                      </div>\\n                      \\n                    </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==2\\\">\\n                    <span style=\\\"padding-left: 5%;\\\">Answer Your Secret Question</span>\\n                    <div class=\\\"card-body \\\">\\n                  \\n                     <div class=\\\"input\\\" style=\\\"margin-bottom:10px;\\\">\\n                       <select class=\\\"form-control\\\">\\n                          <option value=`{{this.ques[0]}}` aria-readonly=\\\"true\\\">{{this.ques[1]}}</option>\\n                      </select>\\n                    </div>\\n                  \\n                    <div class=\\\"input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"nc-icon nc-bulb-63\\\"></i>\\n                        </span>\\n                      </div>\\n                     <input ype=\\\"text\\\" class=\\\"form-control\\\" name=\\\"answer\\\" [ngModel]=\\\"forgetPass.answer\\\" required  #answer=\\\"ngModel\\\" placeholder=\\\"Answer\\\" autocomplete=\\\"off\\\">    \\n                    </div>\\n                    <small [hidden]=\\\"answer.valid || (answer.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                      Answer is required.\\n                    </small>\\n  \\n                  <div style=\\\"text-align: right; font-size: small;\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                </div>\\n  \\n                </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==3\\\">\\n                    \\n                    <span style=\\\"padding-left: 5%;\\\">Receive Verification Code</span>\\n                  <div class=\\\"card-body\\\">\\n                          <input type=\\\"radio\\\" id=\\\"css\\\" name=\\\"selectedOption\\\" [ngModel]=\\\"forgetPass.selectedOption\\\" required  #selectedOption=\\\"ngModel\\\" value=1 style=\\\"margin-top: 10px;\\\">\\n                          <label for=\\\"css\\\" style=\\\"color: black; font-size: 0.971em;\\\"> Email to address {{this.cred[0]}}</label><br>\\n                          <input type=\\\"radio\\\" id=\\\"javascript\\\" name=\\\"selectedOption\\\" [ngModel]=\\\"forgetPass.selectedOption\\\" required  #selectedOption=\\\"ngModel\\\" value=2>\\n                          <label for=\\\"javascript\\\" style=\\\"color: black; font-size: 0.981em;\\\">SMS to phone number {{this.cred[1]}}</label>\\n  \\n                    <div style=\\\"text-align: right; font-size: small;\\\">\\n                      <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                  </div>\\n                  <small [hidden]=\\\"selectedOption.valid || (selectedOption.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                    Please Select..\\n                  </small>\\n  \\n                  </div>\\n                  \\n                    \\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==4\\\">\\n                    <span style=\\\"padding: 5%;float:left;width:100%;text-align:left;font-size:12px;\\\">Please retrieve the security code form your email account. Remember to check your spam folder if you cannot see the message in your inbox.</span>\\n                    <div class=\\\"card-body \\\">\\n                      <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-key-25\\\"></i>\\n                          </span>\\n                        </div>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"secretcode\\\" [ngModel]=\\\"forgetPass.secretcode\\\" required  #secretcode=\\\"ngModel\\\" placeholder=\\\"Secret Code\\\">\\n                      </div>\\n                      <small [hidden]=\\\"secretcode.valid || (secretcode.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                        Secret Code is required.\\n                      </small>\\n  \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                         <button type=\\\"button\\\" (click)=\\\"resendOTP()\\\" style=\\\"border: 0px;background: none;color:#3D5A80;margin-bottom:10px;\\\">Resend OTP</button>\\n                      </div>\\n  \\n                      <div class=\\\"input-group mb-3\\\" >\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                          </span>\\n                        </div>\\n                         <input type=\\\"{{this.passwordType1}}\\\" onCopy=\\\"return false\\\" onPaste=\\\"return false\\\" class=\\\"form-control\\\" name=\\\"newpassword\\\" [ngModel]=\\\"forgetPass.newpassword\\\" required  #newpassword=\\\"ngModel\\\" placeholder=\\\"New Password\\\">\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"{{this.iconType1}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType1()\\\"></i>\\n                          </span>\\n                        </div>\\n                        </div>\\n                      <small [hidden]=\\\"newpassword.valid || (newpassword.pristine &&  !submitted)\\\" class=\\\"text-danger\\\">\\n                        New Password is required.\\n                      </small>\\n                      \\n                      <!-- confirm Password -->\\n                      <div class=\\\"input-group\\\"  [ngClass]=\\\"{'input-group-focus':focus2===true}\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                          </span>\\n                        </div>\\n                         <input type=\\\"{{this.passwordType2}}\\\" onCopy=\\\"return false\\\" onPaste=\\\"return false\\\" class=\\\"form-control\\\" name=\\\"newpassword2\\\" [ngModel]=\\\"forgetPass.newpassword2\\\" required  #newpassword2=\\\"ngModel\\\" placeholder=\\\"Confirm Password\\\">\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"{{this.iconType2}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType2()\\\"></i>\\n                          </span>\\n                        </div>\\n                        </div>\\n                      <small [hidden]=\\\"newpassword2.valid || (newpassword2.pristine  && !submitted)\\\" class=\\\"text-danger\\\">\\n                        Confirm Password is required.\\n                      </small>\\n  \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                    </div>\\n  \\n                    </div>\\n                    </div>\\n                  \\n                    \\n                    \\n                    <div class=\\\"card-footer\\\">\\n                    <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                    \\n                      <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                      <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                      </div>\\n                       <div *ngIf=\\\"!loading\\\">\\n                       <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">{{this.forgotPassBtnText}}</button>\\n                       </div>\\n                    </div>\\n  \\n                </form>\\n            </div>\\n            <!-- end -->\\n  \\n            <!-- Forget Username -->\\n            <div *ngIf=\\\"formName=='forgetUsername'\\\">\\n              <form #f6=\\\"ngForm\\\" (ngSubmit)=\\\"forgetUsername(f6.value, f6.valid)\\\">\\n   \\n                  \\n                  <div style=\\\"text-align: right; font-size: small; padding-right: 4%; color: darkgray;\\\">\\n                    <span>Step {{this.forgotUserstep}}/2</span>\\n                </div>\\n                <div *ngIf=\\\"forgotUserstep==1\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"nc-icon nc-email-85\\\"></i>\\n                        </span>\\n                      </div>\\n                     <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [email]=\\\"true\\\" [ngModel]=\\\"forgetPass.email\\\" required  #email=\\\"ngModel\\\" placeholder=\\\"Email Address\\\" autocomplete=\\\"off\\\">    \\n                    </div>\\n                    <small [hidden]=\\\"email.valid || (email.pristine && !f6.submitted)\\\" class=\\\"text-danger\\\">\\n                      Please enter valid email into Email field.\\n                    </small>\\n  \\n                  <div style=\\\"text-align: right; font-size: small;\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                </div>\\n  \\n                </div>\\n              </div>\\n  \\n                <div *ngIf=\\\"forgotUserstep==2\\\">\\n                <div class=\\\"card-body\\\">\\n                  <span>Check your email for a message from Vision Care Direct\\n                    containing your username.</span>\\n                </div>\\n                </div>\\n                \\n                  \\n  \\n                  <div class=\\\"card-footer\\\">\\n                  <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                    <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                    </div>\\n                     <div *ngIf=\\\"!loading\\\">\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">{{this.forgetUserBtnText}}</button>\\n                     </div>\\n                  </div>\\n  \\n              </form>\\n            </div>\\n            <!-- end -->\\n  \\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n      <!-- <footer class=\\\"footer footer-black  footer-white \\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <nav class=\\\"footer-nav\\\">\\n              <span class=\\\"copyright\\\" style=\\\"font-size: small;\\\">\\n               <i class=\\\"\\\"></i> \\n              </span>\\n            </nav>\\n            <div class=\\\"credits ml-auto\\\">\\n              <span class=\\\"copyright\\\">\\n                &copy; 2022 All Rights Reserved.<i class=\\\"\\\"></i> \\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </footer> -->\\n    </div>\\n  </div>\\n  </div>\";"]}