{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/pages/login/login.component.ts","./src/app/services/api.service.ts","./src/app/pages/lock/lock.component.html","./src/app/pages/pages.module.ts","./src/app/pages/register/register.component.ts","./src/app/pages/pages.routing.ts","./src/app/pages/lock/lock.component.ts","./src/app/services/ng-recaptcha3.service.ts","./src/app/pages/login/login.component.html"],"names":[],"mappings":"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","file":"pages-pages-module-es2015.js","sourcesContent":["export default \"<nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-wrapper\\\">\\n      <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n          <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n        </button>\\n      </div>\\n      <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">Paper Dashboard PRO Angular</a>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-layout-11\\\"></i> Dashboard\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/register']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-book-bookmark\\\"></i> Register\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/login']\\\"  class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-tap-01\\\"></i> Login\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/user']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-satisfied\\\"></i> User\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item  active \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/lock']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-key-25\\\"></i> Lock\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"wrapper wrapper-full-page \\\">\\n  <div class=\\\"full-page register-page section-image\\\" filter-color=\\\"black\\\" data-image=\\\"./assets/img/bg/jan-sendereks.jpg\\\">\\n    <div class=\\\"content\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-5 col-md-5 ml-auto\\\">\\n            <div class=\\\"info-area info-horizontal mt-5\\\">\\n              <div class=\\\"icon icon-primary\\\">\\n                <i class=\\\"nc-icon nc-tv-2\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Marketing</h5>\\n                <p class=\\\"description\\\">\\n                  We've created the marketing campaign of the website. It was a very interesting collaboration.\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"info-area info-horizontal\\\">\\n              <div class=\\\"icon icon-primary\\\">\\n                <i class=\\\"nc-icon nc-html5\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Fully Coded in HTML5</h5>\\n                <p class=\\\"description\\\">\\n                  We've developed the website with HTML5 and CSS3. The client has access to the code using GitHub.\\n                </p>\\n              </div>\\n            </div>\\n            <div class=\\\"info-area info-horizontal\\\">\\n              <div class=\\\"icon icon-info\\\">\\n                <i class=\\\"nc-icon nc-atom\\\"></i>\\n              </div>\\n              <div class=\\\"description\\\">\\n                <h5 class=\\\"info-title\\\">Built Audience</h5>\\n                <p class=\\\"description\\\">\\n                  There is also a Fully Customizable CMS Admin Dashboard for this product.\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-4 col-md-6 mr-auto\\\">\\n            <div class=\\\"card card-signup text-center\\\">\\n              <div class=\\\"card-header \\\">\\n                <h4 class=\\\"card-title\\\">Register</h4>\\n                <div class=\\\"social\\\">\\n                  <button class=\\\"btn btn-icon btn-round btn-twitter\\\">\\n                    <i class=\\\"fa fa-twitter\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-icon btn-round btn-dribbble\\\">\\n                    <i class=\\\"fa fa-dribbble\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-icon btn-round btn-facebook\\\">\\n                    <i class=\\\"fa fa-facebook-f\\\"></i>\\n                  </button>\\n                  <p class=\\\"card-description\\\"> or be classical </p>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body \\\">\\n                <form class=\\\"form\\\" method=\\\"\\\" action=\\\"\\\">\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\">\\n                  </div>\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus1===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-circle-10\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Last Name...\\\" class=\\\"form-control\\\" (focus)=\\\"focus1=true\\\" (blur)=\\\"focus1=false\\\">\\n                  </div>\\n                  <div class=\\\"input-group\\\" [ngClass]=\\\"{'input-group-focus':focus2===true}\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-email-85\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email...\\\" (focus)=\\\"focus2=true\\\" (blur)=\\\"focus2=false\\\">\\n                  </div>\\n                  <div class=\\\"form-check text-left\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" checked>\\n                      <span class=\\\"form-check-sign\\\"></span>\\n                      I agree to the\\n                      <a href=\\\"#something\\\">terms and conditions</a>.\\n                    </label>\\n                  </div>\\n                </form>\\n              </div>\\n              <div class=\\\"card-footer \\\">\\n                <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-info btn-round\\\">Get Started</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer footer-black  footer-white \\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <nav class=\\\"footer-nav\\\">\\n            <ul>\\n              <li>\\n                <a href=\\\"#\\\" target=\\\"_blank\\\">Creative Tim</a>\\n              </li>\\n              <li>\\n                <a href=\\\"http://blog.creative-tim.com/\\\" target=\\\"_blank\\\">Blog</a>\\n              </li>\\n              <li>\\n                <a href=\\\"#/license\\\" target=\\\"_blank\\\">Licenses</a>\\n              </li>\\n            </ul>\\n          </nav>\\n          <div class=\\\"credits ml-auto\\\">\\n            <span class=\\\"copyright\\\">\\n              &copy; {{test | date: 'yyyy'}}, made with <i class=\\\"fa fa-heart heart\\\"></i> by Creative Tim\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </footer>\\n  </div>\\n</div>\\n\";","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms'\nimport { NgRecaptcha3Service } from '../../services/ng-recaptcha3.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ApiService } from '../../services/api.service';\nimport { headers } from 'environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\n\n\ndeclare var $:any;\ndeclare interface User {\n    username?: string; //  must be valid email format\n    password?: string; // required, value must be equal to confirm password.\n    \n}\n\ndeclare interface ForgetPassword {\n    username?: string;\n    answer?: string; // required, value must be equal to confirm password.\n    secretcode?: string;\n    newpassword?: string;\n    selectedOption?: string;\n    email?: string;\n    newpassword2?: string;\n    \n}\n\n@Component({\n    moduleId:module.id,\n    selector: 'login-cmp',\n    templateUrl: './login.component.html',\n    // styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n    message:                string  =   '';\n    communicationChannel:   string  =   '';\n    deviceID:               string  =   '';\n    ques:                   string  =   '';\n    cred:                   string  =   '';\n    forgotPassBtnText:      string  =   'Next';\n    forgetUserBtnText:      string  =   'Next';\n    formName:               string  =   'login';\n    passwordType:           string  =   'password';\n    passwordType1:          string  =   'password';\n    passwordType2:          string  =   'password';\n    formHeading:            string  =   'WELCOME BACK';\n    iconType:               string  =   'fa fa-eye-slash';\n    iconType1:              string  =   'fa fa-eye-slash';\n    iconType2:              string  =   'fa fa-eye-slash';\n    submitted:              boolean =   false;\n    forgotPassStep:         any     =   1;\n    forgotUserstep:         any     =   1;\n    username:               any     =   \"\";\n    option:                 Number;\n\n\n    private siteKey     = '6LdhHnodAAAAANT35rUOPEZ0TnF31D6qOqSfby81';\n    public  loading     : boolean;\n    public  login       : User;\n    public  forgetPass  : ForgetPassword;\n  \n\n        focus;\n        focus1;\n        focus2;\n        test : Date = new Date();\n        private toggleButton;\n        private sidebarVisible: boolean;\n        private nativeElement:  Node;\n\n    constructor(private element : ElementRef,\n        private http: HttpClient, \n        private recaptcha3: NgRecaptcha3Service,\n        private auth: AuthService,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private api:ApiService,\n        private cookies: CookieService,) \n        {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n        }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n   \n    ngOnInit(){\n    this.forgotPassStep     = 1;\n    this.forgotUserstep     = 1;\n    this.forgotPassBtnText  = 'Next';\n    this.forgetUserBtnText  = 'Next'\n    this.loading            = false;\n    this.login = {\n            username: '',\n            password: '',\n        }\n    this.forgetPass = {\n            answer: '',\n            secretcode: '',\n            newpassword: '',\n            selectedOption: '',\n            email: '',\n            newpassword2: '',\n        }\n\n        this.recaptcha3.init(this.siteKey);\n        this.checkFullPageBackgroundImage();\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('login-page');\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('login-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n\n    TogglePasswordType(){\n        if(this.passwordType=='password' && this.iconType=='fa fa-eye-slash'){\n            this.passwordType='text'\n            this.iconType='fa fa-eye'\n        }else{\n            this.passwordType='password'\n            this.iconType='fa fa-eye-slash'\n            \n        }\n    }\n\n    TogglePasswordType1(){\n        if(this.passwordType1=='password' && this.iconType1=='fa fa-eye-slash'){\n            this.passwordType1='text'\n            this.iconType1='fa fa-eye'\n        }else{\n            this.passwordType1='password'\n            this.iconType1='fa fa-eye-slash'\n        }\n    }\n\n    TogglePasswordType2(){\n        if(this.passwordType2=='password' && this.iconType2=='fa fa-eye-slash'){\n            this.passwordType2='text'\n            this.iconType2='fa fa-eye'\n        }else{\n            this.passwordType2='password'\n            this.iconType2='fa fa-eye-slash'\n        }\n    }\n\n    // Login function and redirect to the Dashboard\n    \n    loginSubmit(model: User, isValid: boolean) {\n        if(isValid){\n            this.loading = true;\n                let bodydata ={\n                email :model.username,\n                password :model.password,\n                    };\n                this.submitted = true;\n                let headers={\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json'\n                    })\n                }\n                // this.api.httpRequest('post', '/api/login', bodydata).subscribe((result: any) => {\n                    this.http.post('http://www.api.psd2htmlx.com/api/login', bodydata, headers).subscribe((result:any) => {\n                    this.submitted = false;\n                        this.auth.setToken(result.jwt)\n                        // this.auth.setJwt(result.jwt)\n                        this.message = \"\"\n                        this.loading = false;\n                        window.location.href = '#/dashboard'\n                       \n                        // this.getUserData()\n                    }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n        \n                \n                    }\n                    \n                }\n\n\n    getUserData(){\n        let headers={\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            })\n        }\n        if (this.auth.jwt){\n            this.http.get('http://www.api.psd2htmlx.com/api/user', headers).subscribe((data:any) => {\n            })\n        }\n        else{\n            window.location.href = 'login'\n        }\n    }\n\n\n\n    destroyRecaptcha() {\n        this.recaptcha3.destroy();\n      }\n\n\n     // Redirect on the Forget Password Page\n    forgetPassword(){\n        this.submitted      =   false;\n        this.loading        =   false;\n        this.message        =   \"\"\n        this.formName       =   'forgotPassForm';\n        this.forgotPassStep =   1;\n        this.formHeading    =   'FORGOT PASSWORD';\n        \n        \n     }\n\n    // Redirect on the Login Page\n    loginRedirect(){\n        this.message        =   \"\"\n        this.formName       =   'login';\n        this.loading        =   false;\n        this.formHeading    =   'WELCOME BACK';\n        \n    }\n\n    // Redirect on the Forget Username Form\n    usernameRedirect(){\n        this.forgotUserstep =   1;\n        this.message        =   \"\"\n        this.formName       =   'forgetUsername';\n        this.loading        =   false;\n        this.formHeading    =   'FORGOT USERNAME';\n    }\n\n    // Resend OTP\n    resendOTP(){\n        this.sendOTP(this.option)\n\n    }\n\n    // Send OTP\n    sendOTP(option){\n        this.recaptcha3.getToken().then(token => {\n            let bodydata = {\n                channel: option,\n                deviceID: this.deviceID,\n                captcha: token\n                };  \n                    this.api.httpRequest('post', 'users/forgotPassword/step3', bodydata).subscribe((result: any) => {\n                        if(result.isOK){\n                            this.message = \"\"\n                            this.forgotPassStep = 4;\n                            this.forgotPassBtnText ='Submit';\n                            this.loading = false;\n                            this.submitted = false;\n                        } else {\n                            this.message = result.message;\n                            this.loading = false;\n                        }\n                    }, error => {\n                this.loading = false;\n                this.message = error.message\n                   \n                });\n\n        }, error => {\n            this.loading = false;\n            this.message = error.message\n               \n            });\n\n    }\n\n    // Forget Password function\n    submitForgotPassword(model: ForgetPassword, isValid: boolean){\n        this.submitted = true;\n        if(isValid){\n        this.loading = true;\n        \n        this.recaptcha3.getToken().then(token => {\n            this.deviceID = this.auth.getDeviceID()\n            if(this.forgotPassStep ==1){  \n                let bodydata ={\n                    username :model.username,\n                    captcha: token,\n                    deviceID : this.deviceID\n                    };\n                        this.api.httpRequest('post', 'users/forgotPassword/step1', bodydata).subscribe((result: any) => {\n                            if(result.isOK){\n                                this.ques = result.params\n                                this.message = \"\"\n                                this.forgotPassStep = 2;\n                                this.loading = false;\n                                this.submitted = false;\n                            } else{\n                                this.message = result.message\n                                this.loading = false;\n                                \n                            }\n                            }, error => {\n                                this.message = error.message;\n                                this.loading = false;\n                            });\n                \n                }\n                \n            if(this.forgotPassStep ==2){ \n                let bodydata = {\n                    question: this.ques[0]+'',\n                    captcha: token,\n                    deviceID : this.deviceID,\n                    answer: model.answer,\n                    };\n                        this.api.httpRequest('post', 'users/forgotPassword/step2', bodydata).subscribe((result: any) => {\n                            if(result.isOK){\n                                this.cred = result.params\n                                this.message = \"\"\n                                this.forgotPassStep = 3;\n                                this.loading = false;\n                                this.submitted = false;\n                            } else {\n                                this.message = result.message;\n                                this.loading = false;\n                            }\n                        }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n\n                }\n\n\n            if(this.forgotPassStep ==3){ \n                this.option =  Number(model.selectedOption)\n                this.sendOTP(this.option);\n\n                }\n        \n        \n            if(this.forgotPassStep ==4){\n                if(model.newpassword != model.newpassword2){\n                    this.message = \"Password does not match\";\n                    this.loading = false;\n                } else {\n                    let bodydata = {\n                        deviceID: this.deviceID,\n                        resetCode: model.secretcode,\n                        newPassword: model.newpassword,\n                        captcha: token\n                        };\n                            this.api.httpRequest('post', 'users/forgotPassword/step4', bodydata).subscribe((result: any) => {\n                                if(result.isOK){\n                                    this.message = \"\"\n                                    this.auth.setToken(result.authData.accessToken)\n                                    this.auth.setRefreshToken(result.authData.refreshToken)\n                                    window.location.href = 'dashboard'\n                                } else {\n                                    this.message = result.message;\n                                    this.loading = false;\n                                }\n                            }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n                        }\n            \n                    }\n                 \n                    }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n                    }\n    \n                }\n    \n   \n    \n    \n    // Forget Username\n\n    forgetUsername(model: ForgetPassword, isValid: boolean){\n        if(isValid){\n            this.loading = true;\n            this.recaptcha3.getToken().then(token => {\n                if(this.forgotUserstep ==1){\n                    let bodydata = {\n                        deviceID: this.auth.getDeviceID(),\n                        captcha: token,\n                        }; \n                            this.api.httpRequest('post', '/users/'+model.email+'/emails/usernameReminder', bodydata).subscribe((result: any) => {\n                                if(result.isOK){\n                                    this.message = \"\"\n                                    this.loading = false;\n                                    this.forgotUserstep = 2;\n                                    this.forgetUserBtnText ='Done'\n\n                                } else{\n                                    this.loading = false;\n                                    this.message = result.message\n                                }\n                            }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n                    }\n\n\n                if(this.forgotUserstep == 2){\n \t\t\t\t\t\tthis.formName = 'login';\n                        this.loading = false;\n                }\n\n                }, error => {\n                    this.loading = false;\n                    this.message = error.message\n                       \n                    });\n\n                    }\n            }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { baseUrl, headers } from 'environments/environment';\n\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  incodeURL: any;\n  apiheader: any;\n  \n\n constructor(private http: HttpClient, private authService: AuthService) { }\n\n\n public httpRequest(method: string,url: string, data) {\n \n  if(data){\n  this.incodeURL = this.incodedData(data)\n  }\n  \n  // if(withAuth){\n  //   if(this.checkAccessToken()){\n  // \t this.apiheader = this.HeaderWithToken();\n  // \t}else{\n  // \t window.location.href = 'login'\n  // \t}\n  // }else{\n  // \tthis.apiheader = this.Header();\n  // }\n  \n  if(method =='post'){\n  \treturn this.http.post(`${baseUrl}${url}`, this.incodeURL, this.apiheader)\n  }else if(method =='put'){\n  \n  }else{\n    \n    return this.http.get(`${baseUrl}${url}`, this.apiheader);\n  }\n    \n    \n  }\n  \n  // public checkAccessToken(){\n  // var AccessToken = this.authService.getAccessToken();\n  // if(AccessToken){\n  // var tokenData = jwt_decode(AccessToken);\n  // var _accessTokenCurrentTime = new Date();\n  // var _accessTokenExpTime = new Date(tokenData['exp'] * 1000);\n  \n  // var seconds = Math.floor((_accessTokenExpTime.getTime() - _accessTokenCurrentTime.getTime())/ 1000) ;\n  // console.log(seconds)\n  // if(seconds < 5){\n  // \treturn this.refreshAccessToken();\n  // }else{\n  // \treturn true\n  // }\n  \n  // }\n \n  // }\n  \n  \n  // public refreshAccessToken(){\n  //   const url = 'jwtRefreshSessions';\n  //   var data = {'refreshToken': this.authService.getRefreshToken(), 'deviceID': this.authService.getDeviceID()};\n  //   const incodeURL = this.incodedData(data)\n  //   return this.http.post<any>(`${baseUrl}${url}`, incodeURL, { headers: headers }).subscribe((result: any) => {\n  //     if(result.isOK){\n  //    \t this.authService.setToken(result.authData.accessToken)\n  //    \t this.authService.setRefreshToken(result.authData.refreshToken)\n  //    \t return true;\n  //     }else{\n  //     return false;\n  //     }\n      \n  //   })\n  // }\n  \n  \n  \n  // public HeaderWithToken() {\n  //   let header = new HttpHeaders();\n  //   header = header.append('Authorization', 'Bearer ' + this.authService.getAccessToken());\n  //   return { headers: header };\n  // }\n  \n  public Header() {\n    return { headers: headers };\n  }\n  \n  public incodedData(data){\n    const toUrlEncoded = obj => Object.keys(obj).map(\n      k => encodeURIComponent(k) + '=' + encodeURIComponent(obj[k])).join('&');\n      return(toUrlEncoded(data))\n  }\n  \n}\n","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-wrapper\\\">\\n      <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n          <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n        </button>\\n      </div>\\n      <a class=\\\"navbar-brand\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\">Paper Dashboard PRO Angular</a>\\n    </div>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/dashboard']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-layout-11\\\"></i> Dashboard\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/register']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-book-bookmark\\\"></i> Register\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/login']\\\"  class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-tap-01\\\"></i> Login\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/user']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-satisfied\\\"></i> User\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item  active \\\">\\n          <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/pages/lock']\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nc-icon nc-key-25\\\"></i> Lock\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"wrapper wrapper-full-page \\\">\\n  <div class=\\\"full-page lock-page section-image\\\" filter-color=\\\"black\\\" data-image=\\\"./assets/img/bg/bruno-abatti.jpg\\\">\\n    <!--   you can change the color of the filter page using: data-color=\\\"blue | green | orange | red | purple\\\" -->\\n    <div class=\\\"content\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"col-lg-4 col-md-6 ml-auto mr-auto\\\">\\n          <div class=\\\"card card-lock text-center\\\">\\n            <div class=\\\"card-header \\\">\\n              <img src=\\\"./assets/img/faces/joe-gardner-2.jpg\\\" alt=\\\"...\\\">\\n            </div>\\n            <div class=\\\"card-body \\\">\\n              <h4 class=\\\"card-title\\\">Joe Gardner</h4>\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password..\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"card-footer \\\">\\n              <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-default btn-round\\\">Unlock</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer footer-black  footer-white \\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <nav class=\\\"footer-nav\\\">\\n            <ul>\\n              <li>\\n                <a href=\\\"#\\\" target=\\\"_blank\\\">Creative Tim</a>\\n              </li>\\n              <li>\\n                <a href=\\\"http://blog.creative-tim.com/\\\" target=\\\"_blank\\\">Blog</a>\\n              </li>\\n              <li>\\n                <a href=\\\"#/license\\\" target=\\\"_blank\\\">Licenses</a>\\n              </li>\\n            </ul>\\n          </nav>\\n          <div class=\\\"credits ml-auto\\\">\\n            <span class=\\\"copyright\\\">\\n            &copy; {{test | date: 'yyyy'}}, made with <i class=\\\"fa fa-heart heart\\\"></i> by Creative Tim\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </footer>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\nimport { PagesRoutes } from './pages.routing';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LockComponent } from './lock/lock.component';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(PagesRoutes),\n        FormsModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n    ],\n    declarations: [\n        LoginComponent,\n        RegisterComponent,\n        LockComponent\n    ]\n})\n\nexport class PagesModule {}\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\n\ndeclare var $:any;\n\n@Component({\n    moduleId:module.id,\n    selector: 'register-cmp',\n    templateUrl: './register.component.html'\n})\n\nexport class RegisterComponent implements OnInit{\n  focus;\n  focus1;\n  focus2;\n    test : Date = new Date();\n    private toggleButton;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n\n    constructor(private element : ElementRef) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('register-page');\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    ngOnInit(){\n        this.checkFullPageBackgroundImage();\n\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('register-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n}\n","import { Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LockComponent } from './lock/lock.component';\nimport { LoginComponent } from './login/login.component';\n\nexport const PagesRoutes: Routes = [{\n    path: '',\n    children: [ {\n        path: 'login',\n        component: LoginComponent\n    },{\n        path: 'lock',\n        component: LockComponent\n    },{\n        path: 'register',\n        component: RegisterComponent\n    }]\n}];\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\n\ndeclare var $:any;\n\n@Component({\n    moduleId:module.id,\n    selector: 'lock-cmp',\n    templateUrl: './lock.component.html'\n})\n\nexport class LockComponent implements OnInit{\n    test : Date = new Date();\n    private toggleButton;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n\n    constructor(private element : ElementRef) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n    checkFullPageBackgroundImage(){\n        var $page = $('.full-page');\n        var image_src = $page.data('image');\n\n        if(image_src !== undefined){\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\n            $page.append(image_container);\n        }\n    };\n\n    ngOnInit(){\n        this.checkFullPageBackgroundImage();\n\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('lock-page');\n\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function(){\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700)\n    }\n\n    ngOnDestroy(){\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('lock-page');\n    }\n    sidebarToggle(){\n        var toggleButton = this.toggleButton;\n        var body = document.getElementsByTagName('body')[0];\n        var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n        if(this.sidebarVisible == false){\n            setTimeout(function(){\n                toggleButton.classList.add('toggled');\n            },500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.toggleButton.classList.remove('toggled');\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgRecaptcha3Service {\n  private baseUrl = 'https://www.google.com/recaptcha/api.js';\n  private siteKey = '';\n  private isLoaded: Boolean = false;\n  private scriptId;\n\n  constructor() { \n    window['ngRecaptcha3Loaded'] = () => {\n      this.isLoaded = true;\n    };\n    this.scriptId = +(new Date());\n  }\n\n  public getToken(action?: any): Promise<any> {\n    try {\n      return window['grecaptcha'].execute(this.siteKey, action);\n    } catch (e) {\n      return new Promise((resolve, reject) => {\n        reject(e);\n      });\n    }\n  }\n\n  public init(siteKey) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoaded) {\n        resolve('success');\n        return;\n      } else {\n        this.siteKey = siteKey;\n        const script = document.createElement('script');\n        script.innerHTML = '';\n        script.src = this.baseUrl + `?render=${this.siteKey}&onload=ngRecaptcha3Loaded`;\n        script.id = `recapthcha-${this.scriptId}`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          resolve('success');\n        }\n        script.onerror = () => {\n          reject('error');\n        };\n        document.head.appendChild(script);\n      }\n\n    });\n\n  }\n\n  public destroy() {\n    this.isLoaded = false;\n      const script = document.getElementById(`recapthcha-${this.scriptId}`);\n      if (script) {\n        script.remove();\n      }\n      const badge = document.getElementsByClassName('grecaptcha-badge')[0];\n      if (badge) {\n        badge.remove();\n      }\n  \n    }\n\n}\n","export default \"<style>\\n  .form-control{border-color:#DDDDDD!important;}\\n  .input-group .form-control:not(:first-child):not(:last-child), .input-group-btn:not(:first-child):not(:last-child){\\n      border-top-right-radius: 0!important;\\n       border-bottom-right-radius: 0!important; \\n  }\\n  h4.header{margin-top:0px;}\\n  small, .small {\\n      margin-bottom: 10px;\\n      float: left;\\n  }\\n  </style>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\\\">\\n    <div class=\\\"container\\\" >\\n      <div class=\\\"navbar-wrapper\\\">\\n        <div class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n            <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n            <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n            <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n          </button>\\n        </div>\\n        <!-- <img src=\\\"./assets/img/logo(1).png\\\" alt=\\\"image\\\" style=\\\"margin: left 110px; height: 50px; opacity: 0.6;\\\"> -->\\n      </div>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\" aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n        <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n      </div>\\n    </div>\\n  </nav>\\n  <div class=\\\"text-white bg-dark\\\">\\n  <div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page\\\" style=\\\"color: #1e4b63\\\">\\n      <div class=\\\"content\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-4 col-md-6 ml-auto mr-auto\\\">\\n  \\n            <div class=\\\"card card-login\\\">\\n              <div class=\\\"card-header \\\">\\n                <div class=\\\"card-header \\\">\\n                  <h4 class=\\\"header text-center\\\">{{this.formHeading}}</h4>\\n                </div>\\n              </div>\\n  \\n            <!-- login form -->\\n            <div *ngIf=\\\"formName=='login'\\\">\\n            <form #f1=\\\"ngForm\\\" novalidate  (ngSubmit)=\\\"loginSubmit(f1.value, f1.valid)\\\">\\n              \\n                <div class=\\\"card-body \\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                      </span>\\n                    </div>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"login.username\\\" required  #username=\\\"ngModel\\\" placeholder=\\\"Username\\\">\\n                   \\n                  </div>\\n                  <small [hidden]=\\\"username.valid || (username.pristine && !f1.submitted)\\\" class=\\\"text-danger\\\">\\n                                    Username is required.\\n                                  </small>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                      </span>\\n                    </div>\\n                     <input type=\\\"{{this.passwordType}}\\\" class=\\\"form-control\\\" name=\\\"password\\\"  [ngModel]=\\\"login.password\\\" required validateEqual=\\\"confirmPassword\\\" reverse=\\\"true\\\" #password=\\\"ngModel\\\" placeholder=\\\"Password\\\">\\n                     <div class=\\\"input-group-append\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"{{this.iconType}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType()\\\"></i>\\n                      </span>\\n                    </div>\\n                    </div>\\n                   <small [hidden]=\\\"password.valid || (password.pristine && !f1.submitted)\\\" class=\\\"text-danger\\\">\\n                                    Password is required\\n                                  </small>\\n                    <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"forgetPassword()\\\">Forgot Password?</a>\\n                  </div>\\n                  \\n                  \\n                </div>\\n               \\n  \\n                <div class=\\\"card-footer\\\">\\n                <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                  <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                  <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                  </div>\\n                   <div *ngIf=\\\"!loading\\\">\\n                   <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">Sign in</button>\\n                   </div>\\n                </div>\\n  \\n            </form>\\n            </div>\\n            <!-- end -->\\n  \\n            <!-- forget password form -->\\n            <div *ngIf=\\\"formName=='forgotPassForm'\\\">\\n                <form #f2=\\\"ngForm\\\" novalidate  (ngSubmit)=\\\"submitForgotPassword(f2.value, f2.valid)\\\">\\n  \\n                   \\n                    <div style=\\\"text-align: right; font-size: small; padding-right: 4%; color: darkgray;\\\">\\n                      <span>Step {{this.forgotPassStep}}/4</span>\\n                  </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==1\\\">\\n                    <div class=\\\"card-body \\\">\\n                      \\n                      <div class=\\\"input-group\\\">\\n                        \\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-single-02\\\"></i>\\n                          </span>\\n                        </div>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"login.username\\\" required  #username=\\\"ngModel\\\" placeholder=\\\"Username\\\">\\n                       \\n                      </div>\\n                      <small [hidden]=\\\"username.valid || (username.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                          Username is required.\\n                      </small>\\n                     \\n                      \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"usernameRedirect()\\\">Forgot Username?</a>\\n                      </div>\\n                      \\n                    </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==2\\\">\\n                    <span style=\\\"padding-left: 5%;\\\">Answer Your Secret Question</span>\\n                    <div class=\\\"card-body \\\">\\n                  \\n                     <div class=\\\"input\\\" style=\\\"margin-bottom:10px;\\\">\\n                       <select class=\\\"form-control\\\">\\n                          <option value=`{{this.ques[0]}}` aria-readonly=\\\"true\\\">{{this.ques[1]}}</option>\\n                      </select>\\n                    </div>\\n                  \\n                    <div class=\\\"input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"nc-icon nc-bulb-63\\\"></i>\\n                        </span>\\n                      </div>\\n                     <input ype=\\\"text\\\" class=\\\"form-control\\\" name=\\\"answer\\\" [ngModel]=\\\"forgetPass.answer\\\" required  #answer=\\\"ngModel\\\" placeholder=\\\"Answer\\\" autocomplete=\\\"off\\\">    \\n                    </div>\\n                    <small [hidden]=\\\"answer.valid || (answer.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                      Answer is required.\\n                    </small>\\n  \\n                  <div style=\\\"text-align: right; font-size: small;\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                </div>\\n  \\n                </div>\\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==3\\\">\\n                    \\n                    <span style=\\\"padding-left: 5%;\\\">Receive Verification Code</span>\\n                  <div class=\\\"card-body\\\">\\n                          <input type=\\\"radio\\\" id=\\\"css\\\" name=\\\"selectedOption\\\" [ngModel]=\\\"forgetPass.selectedOption\\\" required  #selectedOption=\\\"ngModel\\\" value=1 style=\\\"margin-top: 10px;\\\">\\n                          <label for=\\\"css\\\" style=\\\"color: black; font-size: 0.971em;\\\"> Email to address {{this.cred[0]}}</label><br>\\n                          <input type=\\\"radio\\\" id=\\\"javascript\\\" name=\\\"selectedOption\\\" [ngModel]=\\\"forgetPass.selectedOption\\\" required  #selectedOption=\\\"ngModel\\\" value=2>\\n                          <label for=\\\"javascript\\\" style=\\\"color: black; font-size: 0.981em;\\\">SMS to phone number {{this.cred[1]}}</label>\\n  \\n                    <div style=\\\"text-align: right; font-size: small;\\\">\\n                      <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                  </div>\\n                  <small [hidden]=\\\"selectedOption.valid || (selectedOption.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                    Please Select..\\n                  </small>\\n  \\n                  </div>\\n                  \\n                    \\n                    </div>\\n                    \\n                    <div *ngIf=\\\"forgotPassStep==4\\\">\\n                    <span style=\\\"padding: 5%;float:left;width:100%;text-align:left;font-size:12px;\\\">Please retrieve the security code form your email account. Remember to check your spam folder if you cannot see the message in your inbox.</span>\\n                    <div class=\\\"card-body \\\">\\n                      <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-key-25\\\"></i>\\n                          </span>\\n                        </div>\\n                       <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"secretcode\\\" [ngModel]=\\\"forgetPass.secretcode\\\" required  #secretcode=\\\"ngModel\\\" placeholder=\\\"Secret Code\\\">\\n                      </div>\\n                      <small [hidden]=\\\"secretcode.valid || (secretcode.pristine && !submitted)\\\" class=\\\"text-danger\\\">\\n                        Secret Code is required.\\n                      </small>\\n  \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                         <button type=\\\"button\\\" (click)=\\\"resendOTP()\\\" style=\\\"border: 0px;background: none;color:#3D5A80;margin-bottom:10px;\\\">Resend OTP</button>\\n                      </div>\\n  \\n                      <div class=\\\"input-group mb-3\\\" >\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                          </span>\\n                        </div>\\n                         <input type=\\\"{{this.passwordType1}}\\\" onCopy=\\\"return false\\\" onPaste=\\\"return false\\\" class=\\\"form-control\\\" name=\\\"newpassword\\\" [ngModel]=\\\"forgetPass.newpassword\\\" required  #newpassword=\\\"ngModel\\\" placeholder=\\\"New Password\\\">\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"{{this.iconType1}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType1()\\\"></i>\\n                          </span>\\n                        </div>\\n                        </div>\\n                      <small [hidden]=\\\"newpassword.valid || (newpassword.pristine &&  !submitted)\\\" class=\\\"text-danger\\\">\\n                        New Password is required.\\n                      </small>\\n                      \\n                      <!-- confirm Password -->\\n                      <div class=\\\"input-group\\\"  [ngClass]=\\\"{'input-group-focus':focus2===true}\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"nc-icon nc-lock-circle-open\\\"></i>\\n                          </span>\\n                        </div>\\n                         <input type=\\\"{{this.passwordType2}}\\\" onCopy=\\\"return false\\\" onPaste=\\\"return false\\\" class=\\\"form-control\\\" name=\\\"newpassword2\\\" [ngModel]=\\\"forgetPass.newpassword2\\\" required  #newpassword2=\\\"ngModel\\\" placeholder=\\\"Confirm Password\\\">\\n                         <div class=\\\"input-group-append\\\">\\n                          <span class=\\\"input-group-text\\\">\\n                            <i class=\\\"{{this.iconType2}}\\\" style=\\\"margin-left: 4px;\\\" (click)=\\\"TogglePasswordType2()\\\"></i>\\n                          </span>\\n                        </div>\\n                        </div>\\n                      <small [hidden]=\\\"newpassword2.valid || (newpassword2.pristine  && !submitted)\\\" class=\\\"text-danger\\\">\\n                        Confirm Password is required.\\n                      </small>\\n  \\n                      <div style=\\\"text-align: right; font-size: small;\\\">\\n                        <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                    </div>\\n  \\n                    </div>\\n                    </div>\\n                  \\n                    \\n                    \\n                    <div class=\\\"card-footer\\\">\\n                    <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                    \\n                      <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                      <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                      </div>\\n                       <div *ngIf=\\\"!loading\\\">\\n                       <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">{{this.forgotPassBtnText}}</button>\\n                       </div>\\n                    </div>\\n  \\n                </form>\\n            </div>\\n            <!-- end -->\\n  \\n            <!-- Forget Username -->\\n            <div *ngIf=\\\"formName=='forgetUsername'\\\">\\n              <form #f6=\\\"ngForm\\\" (ngSubmit)=\\\"forgetUsername(f6.value, f6.valid)\\\">\\n   \\n                  \\n                  <div style=\\\"text-align: right; font-size: small; padding-right: 4%; color: darkgray;\\\">\\n                    <span>Step {{this.forgotUserstep}}/2</span>\\n                </div>\\n                <div *ngIf=\\\"forgotUserstep==1\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                          <i class=\\\"nc-icon nc-email-85\\\"></i>\\n                        </span>\\n                      </div>\\n                     <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [email]=\\\"true\\\" [ngModel]=\\\"forgetPass.email\\\" required  #email=\\\"ngModel\\\" placeholder=\\\"Email Address\\\" autocomplete=\\\"off\\\">    \\n                    </div>\\n                    <small [hidden]=\\\"email.valid || (email.pristine && !f6.submitted)\\\" class=\\\"text-danger\\\">\\n                      Please enter valid email into Email field.\\n                    </small>\\n  \\n                  <div style=\\\"text-align: right; font-size: small;\\\">\\n                    <a href=\\\"#\\\" (click)=\\\"loginRedirect()\\\">Sign in</a>\\n                </div>\\n  \\n                </div>\\n              </div>\\n  \\n                <div *ngIf=\\\"forgotUserstep==2\\\">\\n                <div class=\\\"card-body\\\">\\n                  <span>Check your email for a message from Vision Care Direct\\n                    containing your username.</span>\\n                </div>\\n                </div>\\n                \\n                  \\n  \\n                  <div class=\\\"card-footer\\\">\\n                  <small class=\\\"text-danger\\\">{{this.message}}</small>\\n                    <div *ngIf=\\\"loading\\\"><button class=\\\"btn btn-warning btn-round btn-block mb-3\\\">\\n                    <i class=\\\"fa fa-spinner fa-spin\\\"  style=\\\"align-items: center;\\\"></i></button>\\n                    </div>\\n                     <div *ngIf=\\\"!loading\\\">\\n                     <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-round btn-block mb-3\\\">{{this.forgetUserBtnText}}</button>\\n                     </div>\\n                  </div>\\n  \\n              </form>\\n            </div>\\n            <!-- end -->\\n  \\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n      <!-- <footer class=\\\"footer footer-black  footer-white \\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <nav class=\\\"footer-nav\\\">\\n              <span class=\\\"copyright\\\" style=\\\"font-size: small;\\\">\\n               <i class=\\\"\\\"></i> \\n              </span>\\n            </nav>\\n            <div class=\\\"credits ml-auto\\\">\\n              <span class=\\\"copyright\\\">\\n                &copy; 2022 All Rights Reserved.<i class=\\\"\\\"></i> \\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </footer> -->\\n    </div>\\n  </div>\\n  </div>\";"],"sourceRoot":"webpack:///"}